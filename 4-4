#include <stdio.h>
#include <time.h>
#include <stdlib.h>
#pragma warning(disable : 4996)

void print_matrix(int** m, int row_size, int col_size);
void multiply_matrix(int** ma, int** mb, int row1, int col1, int row2, int col2);

int main(void)
{
    int** A, ** B;
    int row1, row2 = 1, col1 = 0, col2;
    srand((unsigned)time(NULL));

    while (col1 != row2)
    {
        printf("첫 번째 행렬의 행과 열을 입력: ");
        scanf("%d %d", &row1, &col1);
        printf("\n두 번째 행렬의 행은 첫 번째 행렬의 열과 동일해야합니다\n");
        printf("일치하지 않으면 재입력\n\n");
        printf("두 번째 행렬의 행과 열을 입력: ");
        scanf("%d %d", &row2, &col2);
    }
    A = (int**)malloc(sizeof(int*) * row1);
    for (int i = 0; i < row1; i++)
    {
        A[i] = (int*)malloc(sizeof(int) * col1);
    }
    B = (int**)malloc(sizeof(int*) * row2);
    for (int i = 0; i < row2; i++)
    {
        B[i] = (int*)malloc(sizeof(int) * col2);
    }
    for (int i = 0; i < row1; i++)
    {
        for (int j = 0; j < col1; j++)
        {
            A[i][j] = rand() % 10;
        }
    }
    printf("\nA 배열 출력\n");
    print_matrix(A, row1, col1);

    for (int i = 0; i < row2; i++)
    {
        for (int j = 0; j < col2; j++)
        {
            B[i][j] = rand() % 10;
        }
    }
    printf("B 배열 출력\n");
    print_matrix(B, row2, col2);
    multiply_matrix(A, B, row1, col1, row2, col2);

    for (int i = 0; i < row1; i++)
    {
        free(A[i]);
    }
    for (int i = 0; i < row2; i++)
    {
        free(B[i]);
    }
    free(A);
    free(B);
    return 0;
}

void multiply_matrix(int** ma, int** mb, int row1, int col1, int row2, int col2)
{
    int** mab;
    mab = (int**)malloc(sizeof(int*) * row1);

    for (int i = 0; i < row1; i++)
    {
        mab[i] = (int*)malloc(sizeof(int) * col2);
    }
    for (int i = 0; i < row1; i++)
    {
        for (int j = 0; j < col2; j++)
        {
            mab[i][j] = 0;
            for (int k = 0; k < col1; k++)
            {
                mab[i][j] += ma[i][k] * mb[k][j];
            }
        }
    }

    printf("A*B 행렬 출력\n");
    print_matrix(mab, row1, col2);

    for (int i = 0; i < row1; i++)
    {
        free(mab[i]);
    }
    free(mab);
}

void print_matrix(int** m, int row_size, int col_size)

{
    int i, j;
    for (i = 0; i < row_size; i++)
    {
        for (j = 0; j < col_size; j++)
            printf("%3d ", m[i][j]);
        printf("\n");
    }
}
